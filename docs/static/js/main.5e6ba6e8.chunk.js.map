{"version":3,"sources":["components/Navigation/Navbar.js","components/Pages/PresentacionPage.js","Helpers/numRandom.js","components/Parts/OneDice.js","components/Parts/Jumbo.js","components/Pages/OneDicePage.js","components/Pages/TwoDicePage.js","components/Pages/DiceOptions.js","hooks/useForm.js","router/AppRouter.js","index.js"],"names":["Navbar","className","to","PresentacionPage","ramdom","max","min","Math","floor","random","OneDice","useState","randomNumDado","setRandomNumDado","onClick","handleRollDice","valueDiceRandom","Jumbo","title","text","OneDicePage","TwoDicePage","caras","randomNumDado1","setRandomNumDado1","randomNumDado2","setRandomNumDado2","handleRollDice1","handleRollDice2","valueDiceRandom2","DiceOptions","viewErrorFace","setViewErrorFace","viewErrorDice","setViewErrorDice","result","setResult","initialStateForm","formValues","setFormValues","reset","setFieldValue","key","value","handleInputChange","target","name","type","checked","useForm","numFaces","numDices","validateInput","event","preventDefault","isInt","rollDices","total","i","console","log","onSubmit","htmlFor","placeholder","onChange","onFocus","AppRouter","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e6ba6e8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Inicio\n        </Link>\n\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link\" to=\"/one\">\n            Un Dado\n          </Link>\n          <Link className=\"nav-item nav-link\" to=\"/two\">\n            Dos Dados\n          </Link>\n          <Link className=\"nav-item nav-link\" to=\"/opt\">\n            Varios Dados\n          </Link>\n        </div>\n      </nav>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PresentacionPage = () => {\n  return (\n    <>\n      <div className=\"container mt-3\">\n        <h1>BeKind Software, prueba T√©cnica</h1>\n\n        <div className=\"jumbotron mt-3\">\n          <h4>Reto</h4>\n          <ul>\n            <li>Crear una aplicaci√≥n que permita al usuario \"lanzar dados‚Äù üé≤. ‚úîÔ∏è</li>\n          </ul>\n\n          <h4>Historias de usuario:</h4>\n          <ul>\n            <li>Los usuarios deber√°n poder realizar la acci√≥n de lanzar dados. ‚úîÔ∏è</li>\n            <li>\n              Un dado no debe caer dos veces consecutivas en el mismo valor pero mantener\n              la aleatoreidad en el resto de las caras. ‚úîÔ∏è\n            </li>\n          </ul>\n\n          <h4>Extras</h4>\n          <p>\n            Extras: Cumplir con alguna, varias o todas estas funcionalidades extra te da\n            puntos üôÇ\n          </p>\n          <ul>\n            <li>Poder elegir la cantidad de caras del dado. ‚úîÔ∏è</li>\n            <li> Poder tirar m√∫ltiples dados a la vez. ‚úîÔ∏è</li>\n            <li>Poder tirar m√∫ltiples dados de diferentes caras a la vez.</li>\n            <li>\n              Poder ingresar m√∫ltiples usuarios y llevar turnos para tirar los dados as√≠\n              como un conteo de los mismos.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const ramdom = (max = 6, min = 1) => {\n  return Math.floor(Math.random() * (max - min + 1) + 1);\n};\n","import React, { useState } from 'react';\n\nimport { ramdom } from '../../Helpers/numRandom';\n\nexport const OneDice = () => {\n  const caras = ['one', 'two', 'three', 'four', 'five', 'six'];\n\n  const [randomNumDado, setRandomNumDado] = useState(1);\n\n  const handleRollDice = () => {\n    const valueDiceRandom = ramdom();\n\n    if (randomNumDado !== valueDiceRandom) setRandomNumDado(valueDiceRandom);\n    else handleRollDice();\n  };\n\n  return (\n    <>\n      <div className=\"row mt-5\">\n        <div className=\"col text-center\">\n          <div className=\"btn btn-lg btn-danger\" onClick={handleRollDice}>\n            <i\n              className={`fas fa-dice-${caras[randomNumDado - 1]} icon`}\n              // El css anclado directo es simplemente para mostrar que conozco mas formas.\n              // style={{ fontSize: '9rem' }}\n            ></i>\n          </div>\n        </div>\n\n        <div className=\"col text-center\">\n          <div className=\"title\">{randomNumDado}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Jumbo = ({ title, text }) => {\n  return (\n    <>\n      <div className=\"jumbotron mt-4\">\n        {title}\n        <ul>{text}</ul>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { OneDice } from '../Parts/OneDice';\nimport { Jumbo } from '../Parts/Jumbo';\n\nexport const OneDicePage = () => {\n  return (\n    <>\n      <div className=\"container mt-5 \">\n        <OneDice />\n\n        <Jumbo\n          title={<h4>Uso</h4>}\n          text={\n            <li>\n              Pulsa sobre el dado y saldr√° un n√∫mero aleatorio, pero nunca saldr√° dos\n              veces seguidas el mismo valor.\n            </li>\n          }\n        />\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { ramdom } from '../../Helpers/numRandom';\n\nimport { Jumbo } from '../Parts/Jumbo';\n\nexport const TwoDicePage = () => {\n  const caras = ['one', 'two', 'three', 'four', 'five', 'six'];\n\n  const [randomNumDado1, setRandomNumDado1] = useState(1);\n  const [randomNumDado2, setRandomNumDado2] = useState(1);\n\n  const handleRollDice1 = () => {\n    const valueDiceRandom = ramdom();\n\n    if (randomNumDado1 !== valueDiceRandom) setRandomNumDado1(valueDiceRandom);\n    else handleRollDice1();\n  };\n\n  const handleRollDice2 = () => {\n    const valueDiceRandom2 = ramdom();\n\n    if (randomNumDado2 !== valueDiceRandom2) setRandomNumDado2(valueDiceRandom2);\n    else handleRollDice2();\n  };\n\n  const handleRollDices = () => {\n    handleRollDice1();\n    handleRollDice2();\n  };\n\n  return (\n    <>\n      <div className=\"container mt-5 \">\n        <div className=\"row mt-5\">\n          <div className=\"col text-center\">\n            <div className=\"btn btn-lg btn-danger\" onClick={handleRollDice1}>\n              <i\n                className={`fas fa-dice-${caras[randomNumDado1 - 1]} icon`}\n                // El css anclado directo es simplemente para mostrar que conozco mas formas.\n                // style={{ fontSize: '9rem' }}\n              ></i>\n            </div>\n          </div>\n\n          <div className=\"col d-flex align-items-center justify-content-center\">\n            <div className=\"btn btn-lg btn-success\" onClick={handleRollDices}>\n              <i className=\"fas fa-random\"></i>\n            </div>\n          </div>\n\n          <div className=\"col text-center\">\n            <div className=\"btn btn-lg btn-danger\" onClick={handleRollDice2}>\n              <i className={`fas fa-dice-${caras[randomNumDado2 - 1]} icon`}></i>\n            </div>\n          </div>\n        </div>\n        <div className=\"col text-center\">\n          <div className=\"title\">{randomNumDado1 + randomNumDado2}</div>\n        </div>\n\n        <Jumbo\n          title={<h4>Uso:</h4>}\n          text={\n            <>\n              <li>\n                Los dados funcionan individualmente clicando sobre cada uno de ellos, o en\n                conjunto, haciendo click sobre el boton central.\n              </li>\n              <li>Nunca saldr√° dos veces seguidas el mismo valor en el mismo dado</li>\n            </>\n          }\n        />\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { isInt } from 'validator';\nimport { ramdom } from '../../Helpers/numRandom';\n\nimport { useForm } from '../../hooks/useForm';\n\nexport const DiceOptions = () => {\n  const [viewErrorFace, setViewErrorFace] = useState(false);\n  const [viewErrorDice, setViewErrorDice] = useState(false);\n  const [result, setResult] = useState(1);\n\n  const { formValues, handleInputChange } = useForm({\n    numFaces: '',\n    numDices: '',\n  });\n\n  const { numFaces, numDices } = formValues;\n\n  const validateInput = (event) => {\n    event.preventDefault();\n\n    if (isInt(numFaces) && numFaces >= 3) setViewErrorFace(false);\n    else setViewErrorFace(true);\n\n    if (isInt(numDices)) setViewErrorDice(false);\n    else setViewErrorDice(true);\n\n    rollDices();\n  };\n\n  const rollDices = () => {\n    let total = 0;\n\n    for (let i = 0; i < numDices; i++) {\n      total += ramdom(numFaces);\n    }\n\n    console.log({ total }, { result });\n\n    setResult(total);\n  };\n\n  const handleViewErrorFace = () => setViewErrorFace(false);\n\n  const handleViewErrorDice = () => setViewErrorDice(false);\n\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <h1>Lanzar Dados üé≤ </h1>\n\n        <div className=\"row mt-5\">\n          <div className=\"col text-center\">\n            <div className=\"btn btn-lg badge-info\" onClick={validateInput}>\n              <i className={`fas fa-dice-d20 icon`}></i>\n            </div>\n            <div className=\"col text-center mt-2\">\n              <div className=\"text-info\">{`Caras dado: ${numFaces}  ` || ''}</div>\n            </div>\n          </div>\n\n          <div className=\"col text-center \">\n            <div className=\"btn btn-lg badge-info\" onClick={validateInput}>\n              <i className={`fas fa-cubes icon`}></i>\n            </div>\n\n            <div className=\"col text-center mt-2\">\n              <div className=\"text-info\">{`N√∫mero de dados: ${numDices}  ` || ''}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col text-center\">\n          <div className=\"count-dices\">Suma total: {result}</div>\n        </div>\n\n        <div className=\"jumbotron mt-5\">\n          <form onSubmit={validateInput}>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"numFaceDice\">N√∫mero de Caras del Dado:</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    placeholder=\"Introduce un N√∫mero de Caras para el Dado.\"\n                    name=\"numFaces\"\n                    value={numFaces}\n                    onChange={handleInputChange}\n                    onFocus={handleViewErrorFace}\n                  />\n                </div>\n\n                {viewErrorFace && (\n                  <p className=\"text-warning\">\n                    El n√∫mero de caras para el dado introducido, ha de ser un valor entero\n                    (n) y mayor de 3. (Si no puedes jugar con monedas ü§™)\n                  </p>\n                )}\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"nunDices\">N√∫mero de Dados:</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    placeholder=\"Introduce el N√∫mero de Dados que deseas lanzar.\"\n                    name=\"numDices\"\n                    value={numDices}\n                    onChange={handleInputChange}\n                    onFocus={handleViewErrorDice}\n                  />\n                </div>\n\n                {viewErrorDice && (\n                  <p className=\"text-warning\">\n                    El n√∫mero de dados introducido, ha de ser un valor entero.\n                  </p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"row justify-content-center\">\n              <button type=\"submit\" className=\"btn btn-lg btn-primary\">\n                Lanzar\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\n/**\n * @description Custon hook change state for input in to form\n * @param {*} initialStateForm\n * @returns [formValues, handleInputChange, setFormValues, reset] !! Array\n */\nexport const useForm = (initialStateForm = {}) => {\n  const [formValues, setFormValues] = useState(initialStateForm);\n\n  const reset = () => {\n    setFormValues(initialStateForm);\n  };\n\n  const handleInputChange = ({ target }) => {\n    const { name, type, value, checked } = target;\n\n    setFormValues({\n      ...formValues,\n      [name]: type === 'checkbox' ? checked : value,\n    });\n  };\n\n  const setFieldValue = (key, value) => {\n    setFormValues({ ...formValues, [key]: value });\n  };\n\n  return {\n    formValues,\n    handleInputChange,\n    setFormValues,\n    reset,\n    setFieldValue,\n  };\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Navbar } from '../components/Navigation/Navbar';\nimport { PresentacionPage } from '../components/Pages/PresentacionPage';\nimport { OneDicePage } from '../components/Pages/OneDicePage';\nimport { TwoDicePage } from '../components/Pages/TwoDicePage';\nimport { DiceOptions } from '../components/Pages/DiceOptions';\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <Navbar />\n\n      <Switch>\n        <Route exact path=\"/\" component={PresentacionPage} />\n        <Route exact path=\"/one\" component={OneDicePage} />\n        <Route exact path=\"/two\" component={TwoDicePage} />\n        <Route exact path=\"/opt\" component={DiceOptions} />\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { AppRouter } from './router/AppRouter';\n\nReactDOM.render(\n  <>\n    <AppRouter />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}